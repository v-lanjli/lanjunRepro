{
	"name": "scala-nb-read-azure-storage-private",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2
		},
		"metadata": {
			"language_info": {
				"name": "scala"
			}
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"// CELL 1 - command to set the blob storage account connection\n",
					"val scalasecret = \"...retrieve secret from BugBashScalaScret\";\n",
					"spark.conf.set(\"fs.azure.account.key.ruxuspark04.blob.core.windows.net\",scalasecret)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"// CELL 2 - read a JSON file as Spark DataFrame\n",
					"val blobcontainer = \"wasbs://ruxuspark04-2019-04-26t09-39-20-935z@ruxuspark04.blob.core.windows.net\"\n",
					"val blobpath = \"/example/data/people.json\"\n",
					"val jsonFile = spark.read.json( blobcontainer + blobpath)"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"// CELL 3 - save Spark DataFrame as Parquet file, maintaining the schema information \n",
					"jsonFile.write.parquet(\"people.parquet\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"// CELL 4 - the parquet file created above as Spark DataFrame\n",
					"val parquetFileDF = spark.read.parquet(\"people.parquet\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"// CELL 5 - create a temporary view and which is used in subsequent SparkSQL statements\n",
					"parquetFileDF.createOrReplaceTempView(\"parquetFile\")"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"// CELL 6 - filter people with age between 20 to 40 \n",
					"val namesDF = spark.sql(\"SELECT name FROM parquetFile WHERE age BETWEEN 20 AND 40\")\n",
					"namesDF.map(attributes => \"Name: \" + attributes(0)).show()"
				],
				"execution_count": null
			},
			{
				"cell_type": "code",
				"source": [
					"// CELL 7 - please replace the file output name with your alias.\n",
					"val namesRDD = namesDF.rdd\n",
					"val outputpath = \"/example/data/peoplesc_<REPLACE_WITH_YOUR_ALIAS>.txt\"\n",
					"namesRDD.saveAsTextFile( blobcontainer + outputpath)"
				],
				"execution_count": null
			}
		]
	}
}